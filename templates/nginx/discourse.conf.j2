# {{ ansible_managed }}

# TODO clean duplicated stuff

#
# Discourse
#

types {
	text/csv csv;
}

upstream discourse {
	server unix:/run/discourse/unicorn.sock;
}

server {
	listen			[::]:443 ssl;
	server_name		{{ discourse_hostname }};

	access_log		/var/log/nginx/discourse.access.log main;
	error_log		/var/log/nginx/discourse.error.log warn;

	# The maximum file upload size. Keep up to date when changing the
	# corresponding site setting.
	client_max_body_size {{ discourse_max_upload_size + 1 }}m;

	ssl_certificate		{{ discourse_ssl_cert }};
	ssl_certificate_key	{{ discourse_ssl_key }};

	# Enable HSTS Policy
	add_header Strict-Transport-Security "max-age=315360000";

	# Prevent Internet Explorer 10 "compatibility mode", which breaks Discourse.
	# If other subdomains under your domain are supposed to use Internet Explorer Compatibility mode,
	# it may be used for this one too, unless you explicitly tell IE not to use it.  Alternatively,
	# some people have reported having compatibility mode "stuck" on for some reason.
	# (This will also prevent compatibility mode in IE 8 and 9, but those browsers aren't supported anyway.
	add_header X-UA-Compatible "IE=edge";

	# Without weak etags, we get zero benefit from etags on dynamically
	# compressed content. Further more etags are based on the file in nginx,
	# not SHA of data use dates, it solves the problem fine even cross server.
	etag off;

	# Path to discourse's public directory.
	set $public "{{ discourse_base_dir }}/public";

	# prevent direct download of backups
	location ^~ /backups/ {
		internal;
	}

	location / {
		root $public;
		add_header ETag "";

		location ~* assets/.*\.(eot|ttf|woff|woff2|ico)$ {
			expires 1y;
			add_header Cache-Control public;
			add_header Access-Control-Allow-Origin *;
		 }

		location = /srv/status {
			access_log off;
			log_not_found off;

			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $thescheme;

			proxy_pass http://discourse;
		}

		location ~ ^/assets/ {
			expires 1y;
			# Asset pipeline enables this.
			gzip_static on;
			add_header Cache-Control public;
		}

		location ~ ^/plugins/ {
			expires 1y;
			add_header Cache-Control public;
		}

		# cache emojis
		location ~ /_?emoji.*\.(png|gif|jpg|jpeg)$/ {
			expires 1y;
			add_header Cache-Control public;
		}

		location ~ ^/uploads/ {

			# NOTE: it is really annoying that we can't just define headers
			# at the top level and inherit.
			#
			# proxy_set_header DOES NOT inherit, by design, we must repeat it,
			# otherwise headers are not set correctly.
			#
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $thescheme;
			proxy_set_header X-Sendfile-Type X-Accel-Redirect;
			proxy_set_header X-Accel-Mapping $public/=/downloads/;

			expires 1y;
			add_header Cache-Control public;

			# custom CSS
			location ~ /stylesheet-cache/ {
				try_files $uri =404;
			}
			# this allows us to bypass rails
			location ~* \.(gif|png|jpg|jpeg|bmp|tif|tiff)$ {
				try_files $uri =404;
			}
			# thumbnails & optimized images
			location ~ /_?optimized/ {
				try_files $uri =404;
			}

			proxy_pass http://discourse;
		}

		location ~ ^/admin/backups/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $thescheme;
			proxy_set_header X-Sendfile-Type X-Accel-Redirect;
			proxy_set_header X-Accel-Mapping $public/=/downloads/;

			proxy_pass http://discourse;
		}

		# This big block is needed so we can selectively enable acceleration
		# for backups and avatars. See note about repetition above.
		location ~ ^/(letter_avatar|user_avatar|highlight-js|stylesheets|favicon/proxied) {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $thescheme;

			# If Set-Cookie is in the response, nothing gets cached.
			# This is double bad cause we are not passing last modified in.
			proxy_ignore_headers "Set-Cookie";
			proxy_hide_header "Set-Cookie";

			# Note: x-accel-redirect can not be used with proxy_cache.
			proxy_cache one;
			proxy_cache_valid 200 301 302 7d;
			proxy_cache_valid any 1m;
			proxy_pass http://discourse;
		}

		# This means every file in public is tried first.
		try_files $uri @discourse;
	}

	location /downloads/ {
		internal;
		alias $public/;
	}

	# If a file which is not found in the root directory is requested,
	# then pass to upstream server.
	location @discourse {
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $thescheme;
		proxy_pass http://discourse;
	}
}

server {
	listen			[::]:80;
	server_name		{{ discourse_hostname }};

	rewrite			^ https://$server_name$request_uri? permanent;
}
